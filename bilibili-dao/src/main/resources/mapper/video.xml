<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atlinlin.bilibili.dao.VideoDao">

    <!--拿到主键Id和视频标签相关联的添加-->
    <insert id="addVideos" useGeneratedKeys="true" keyProperty="id">
        insert into t_video(id, userId, url, thumbnail, title, `type`, duration, area, description, createTime)
        VALUES (#{id}, #{userId}, #{url}, #{thumbnail}, #{title}, #{type}, #{duration}, #{area}, #{description},
                #{createTime})
    </insert>
    <insert id="batchAddVideoTags">
        insert into
        t_video_tag(
        videoId,
        tagId,
        createTime
        )values(
        <foreach collection="tagList" item="videoTag" separator=",">
            #{videoTag.videoId},
            #{videoTag.tagId},
            #{videoTag.createTime},
        </foreach>
        )
    </insert>
    <insert id="addVideoLike">
        insert into t_video_like (userId, videoId, createTime)
        values (#{userId},#{videoId},#{createTime});
    </insert>
    <insert id="addVideoCollection">
        insert into t_video_collection (videoId, userId, groupId, createTime)
        values (#{videoId},#{userId},#{groupId},#{createTime});
    </insert>
    <insert id="addVideoCoin">
        insert into t_video_coin (userId, videoId, amount, createTime)
        values (#{userId},#{videoId},#{amount},#{createTime},);
    </insert>
    <insert id="addVideoComment">
        insert into t_video_comment (videoId, userId, comment, replyUserId, rootId, createTime)
        values (#{videoId},#{userId},#{comment},#{replyUserId},#{rootId},#{createTime});
    </insert>
    <update id="updateVideoCoin">
        update t_video_coin set amount = #{amount},updateTime = #{updateTime}
        where userId = #{userId} and videoId = #{videoId}
    </update>
    <delete id="deleteVideoLikeByVideoIdAndUserId">
        delete from t_video_like
        where videoId = #{videoId} and userId = #{userId}
    </delete>
    <delete id="deleteVideoCollection">
        delete from t_video_like
        where videoId = #{videoId} and userId = #{userId}
    </delete>
    <select id="pageCountVideos" resultType="java.lang.Integer">
        select
        count(1)
        from
        t_video
        where
        1=1
        <if test="area != null and area != '' ">
            and area = #{area}
        </if>
    </select>
    <select id="pageListVideos" resultType="com.atlinlin.bilibili.domain.Video">
        select
            *
        from
            t_video
        where
             1=1
        <if test="area != null and area != '' ">
            and area = #{area}
        </if>
        order by id desc
        limit #{start},#{limit}
    </select>
    <select id="getVideoById" resultType="com.atlinlin.bilibili.domain.Video">
        select * from t_video
        where id = #{id}
    </select>
    <select id="getVideoLikeByVideoIdAndUserId" resultType="com.atlinlin.bilibili.domain.VideoLike">
        select * from t_video_like
        where userId = #{userId} and userId = #{userId}
    </select>
    <select id="getVideoLikes" resultType="java.lang.Long">
        select count(1)
        from t_video_like
        where videoId = #{videoId}
    </select>
    <select id="getVideoCollections" resultType="java.lang.Long">
        select count(1) from t_video_collection where videoId = #{videoId}
    </select>
    <select id="getVideoCollectionsByVideoIdAndUserId" resultType="com.atlinlin.bilibili.domain.VideoLike">
        select * from t_video_collection where videoId = #{videoId} and userId = #{userId}
    </select>
    <select id="getVideoCoinByVideoIdAndUserId" resultType="com.atlinlin.bilibili.domain.VideoCoin">
        select * from t_video_coin where videoId = #{videoId} and userId = #{userId}
    </select>
    <select id="getVideoCoinsAmount" resultType="java.lang.Long">
        select sum(amount) from t_video_coin where videoId = #{videoId}
    </select>
    <select id="pageCountVideoComments" resultType="java.lang.Integer">
        select
            count(1)
        from
            t_video_comment
        where
            videoId = #{videoId}
          and rootId is null;
    </select>
    <select id="pageListVideoComments" resultType="com.atlinlin.bilibili.domain.VideoComment">
        select
            *
        from
            t_video_comment
        where
            videoId = #{videoId}
          and rootId is null
        order by id desc
        limit #{start},#{limit}
    </select>
    <select id="batchGetVideoCommentsByRootIds" resultType="com.atlinlin.bilibili.domain.VideoComment">
        select
        *
        from
        t_video_comment
        where rootId in
        <foreach collection="rootIdList" item="rootId" open="(" close=")" separator=",">
            #{rootId}
        </foreach>
        order by id;
    </select>
    <select id="getVideoDetails" resultType="com.atlinlin.bilibili.domain.Video">
        select
            *
        from
            t_video
        where id = #{id};
    </select>

</mapper>